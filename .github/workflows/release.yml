on:
  push:
    tags:
      - "v*" # Run when tag matches v*, i.e. v1.0, v20.15.10
    branches:
      - "ci-*"

name: Release

jobs:
  release-build:
    name: Release Build - ${{ matrix.platform.os-name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-gnu

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc

          - os-name: macOS-aarch64
            runs-on: macOS-latest
            target: aarch64-apple-darwin
        toolchain:
          - stable

    runs-on: ${{ matrix.platform.runs-on }}
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build binary (Linux / macOS)
        if: ${{ !startsWith(matrix.platform.os-name, 'Windows') }}
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          toolchain: ${{ matrix.toolchain }}
          strip: true

      - name: Install WIX (Windows)
        if: ${{ startsWith(matrix.platform.os-name, 'Windows') }}
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-wix
          version: "0.3.9"

      - name: Build binary (Windows)
        if: ${{ startsWith(matrix.platform.os-name, 'Windows') }}
        uses: houseabsolute/actions-rust-cross@v1
        with:
          working-directory: ./app
          command: wix
          target: ${{ matrix.platform.target }}
          args: "-p figx --nocapture"
          toolchain: ${{ matrix.toolchain }}
          strip: false
      
      - name: Store Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-binary (${{ matrix.platform.target }})
          path: |
            target/${{ matrix.platform.target }}/release/figx
            target/${{ matrix.platform.target }}/release/figx.exe
            target/**/*.msi
  
  release-prepare:
    name: "Prepare for Deploy"
    needs: release-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [ x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc, aarch64-apple-darwin ]
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-binary (${{ matrix.target }})
          path: ./target
      
      - name: Rename Artifacts
        run: |
          tree -L 3 ./target
          mkdir -p ./target/release
          mv ./target/wix/figx-*.msi ./target/release/figx-installer.msi || true
          mv ./target/${{ matrix.target }}/release/figx ./target/release/figx || true
          mv ./target/${{ matrix.target }}/release/figx.exe ./target/release/figx.exe || true

      - name: Store Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-binary-simplified (${{ matrix.target }})
          path: ./target
  
  release-deploy:
    name: "Deploy"
    needs: release-prepare
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          - runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - runs-on: macOS-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.platform.runs-on }}
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-binary-simplified (${{ matrix.platform.target }})
          path: ./target

      - name: Publish artifacts and release (Windows)
        if: ${{ contains(matrix.platform.target, 'windows') }}
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: figx
          target: ${{ matrix.platform.target }}
          extra-files: ./target/release/figx-installer.msi

      - name: Publish artifacts and release (Linux / MacOS)
        if: ${{ !contains(matrix.platform.target, 'windows') }}
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: figx
          target: ${{ matrix.platform.target }}
